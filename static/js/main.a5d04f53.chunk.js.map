{"version":3,"sources":["Images/me.png","Title.js","ProjectItem.js","ProjectsContainer.js","ProjectConfig.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Title","props","state","personalMachineClick","bind","cloudClick","window","location","href","this","machineLinks","Nav","Item","className","src","Photo","ToggleButtonGroup","type","name","defaultValue","defaultMachine","ToggleButton","onClick","value","variant","Component","ProjectItem","cloudOpen","machineOpen","e","stopPropagation","project","cloudLink","machineLink","Button","Accordion","Card","Toggle","as","Header","eventKey","renderMachineButton","renderCloudButton","Collapse","Body","description","ProjectsContainer","Container","configs","projects","map","index","key","App","showTechnologies","isFadeInNext","technologiesClick","thisReference","setState","setTimeout","Modal","Dialog","closeButton","Footer","oldPortfolioClick","renderTechnologies","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.a5d04f53.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/me.92d20dd0.png\";","import React, { Component } from 'react';\r\nimport { ToggleButtonGroup, ToggleButton, Nav } from 'react-bootstrap' ;\r\nimport Photo from './Images/me.png'\r\n\r\nimport './Title.css'\r\n\r\nexport class Title extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n             \r\n        }\r\n        this.personalMachineClick = this.personalMachineClick.bind(this);\r\n        this.cloudClick = this.cloudClick.bind(this);\r\n    }\r\n    \r\n\r\n    personalMachineClick(){\r\n        window.location.href= \"http://\" + this.props.machineLinks[0]\r\n    }\r\n\r\n    cloudClick(){\r\n       window.location.href=this.props.machineLinks[1]\r\n       \r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Nav>\r\n                    <Nav.Item>\r\n                        <p className=\"text-justify title-text text-muted\">\r\n                        Marco Fernandes  \r\n                        <br/>\r\n                        Portfolio\r\n                        </p>\r\n                        <span className=\"parent-image-title\">\r\n                            <img className=\"image-title rounded border border-secondary\"  src={Photo}></img>\r\n                        </span>\r\n                    </Nav.Item>\r\n                </Nav>\r\n                <span className=\"holder-title-buttons\">\r\n                    <ToggleButtonGroup className=\"title-buttons\" type=\"radio\" name=\"options\" defaultValue={this.props.defaultMachine}>\r\n                                <ToggleButton onClick={()=>this.cloudClick()} value=\"cloud\" variant=\"secondary\" ><div className=\"text-title-button\">Cloud</div></ToggleButton>\r\n                                <ToggleButton onClick={()=>this.personalMachineClick()} value=\"machine\"  variant=\"secondary\" ><div className=\"text-title-button\">Personal <br/> Machine</div></ToggleButton>\r\n                    </ToggleButtonGroup>\r\n                </span>\r\n               \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Title\r\n","import React, { Component } from 'react'\r\nimport { Accordion, Card , Button, Container} from 'react-bootstrap' ;\r\n\r\nexport class ProjectItem extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n             \r\n        }\r\n\r\n        this.cloudOpen = this.cloudOpen.bind(this);\r\n        this.machineOpen = this.machineOpen.bind(this);\r\n    }\r\n    \r\n\r\n    cloudOpen(e){\r\n        e.stopPropagation();\r\n        window.location.href= this.props.project.cloudLink;\r\n    }\r\n\r\n    machineOpen(e){\r\n        e.stopPropagation();\r\n        window.location.href= \"http://\" + this.props.project.machineLink;\r\n    }\r\n\r\n    renderMachineButton(){\r\n        if(this.props.project.machineLink != \"#0\"){    \r\n            return(\r\n                    <Button onClick={(e)=>{ this.machineOpen(e)}} variant=\"dark\" className=\"machine-project\">\r\n                                <div className=\"toogle-text-project\">\r\n                                        Personal\r\n                                        <br></br>\r\n                                        Machine\r\n                                </div>   \r\n                    </Button>\r\n                )\r\n        }else{\r\n            return(\r\n                <div className=\"machine-works-project\">\r\n                    Machine in the works\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n\r\n    renderCloudButton() {\r\n        if(this.props.project.cloudLink != \"#0\"){\r\n            return(\r\n                <Button onClick={(e)=>{ this.cloudOpen(e) }}variant=\"secondary\" className=\"cloud-project\">\r\n                    <div className=\"toogle-text-project\">\r\n                        Cloud\r\n                    </div>\r\n                </Button>\r\n            )\r\n        }else{\r\n            return(\r\n                <div className=\"cloud-works-project\">\r\n                    Cloud in the works\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Accordion >\r\n                <Card>\r\n                    <Accordion.Toggle as={Card.Header}  eventKey=\"0\" className=\"project-item\">\r\n                        <Button >\r\n                            <div className=\"toogle-text-project\">\r\n                                {this.props.project.name}\r\n                            </div>\r\n                        </Button>\r\n                        {\r\n                            this.renderMachineButton()\r\n                        }\r\n\r\n                        {\r\n                            this.renderCloudButton()\r\n                        }\r\n                        \r\n                    </Accordion.Toggle>\r\n                    <Accordion.Collapse eventKey=\"0\" className=\"project-item\">\r\n                        <Card.Body> \r\n                            <div className=\"card-text-project\">\r\n                            {this.props.project.description}\r\n                            </div> \r\n                        </Card.Body>\r\n                    </Accordion.Collapse>\r\n                </Card>\r\n            </Accordion>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ProjectItem\r\n","import React, { Component } from 'react'\r\nimport ProjectItem from './ProjectItem';\r\nimport {Container} from 'react-bootstrap';\r\nimport './Projects.css'\r\n\r\nexport class ProjectsContainer extends Component {\r\n    render() {\r\n        return (\r\n            <Container className=\"container-projects\">\r\n                {\r\n                    this.props.configs.projects.map(\r\n                        function(project, index){\r\n                            return(\r\n                                <ProjectItem key={index} project ={project}></ProjectItem>\r\n                            )\r\n                        }\r\n                    )\r\n                }\r\n            </Container>\r\n            \r\n        )\r\n    }\r\n}\r\n\r\nexport default ProjectsContainer\r\n","var configs = {}\r\n\r\nconfigs.projects = []\r\n\r\nconfigs.defaultMachine = \"cloud\"\r\n\r\nconfigs.machineLinks = []\r\n\r\nconfigs.machineLinks[0] = \"invius.ddns.net\"\r\n\r\nconfigs.machineLinks[1] = \"https://invius.github.io/portfolio/\"\r\n\r\nconfigs.projects[0] = {\r\n    \"name\" : \"PowerBet\",\r\n    \"description\" : \"You can sign up to have a account to play and bet on the winning team! \\n Power To Your Guess!!!\",\r\n    \"machineLink\" : \"invius.ddns.net/powerbet\",\r\n    \"cloudLink\" : \"https://invius.github.io/powerbet/\"\r\n}\r\n\r\nconfigs.projects[1] = {\r\n    \"name\" : \"Angular Tetris\",\r\n    \"description\" : \"In production...\",\r\n    \"machineLink\" : \"#0\",\r\n    \"cloudLink\" : \"#0\"\r\n}\r\n\r\n\r\n\r\nexport default configs","import React, { Component } from 'react';\nimport { Button, Modal } from 'react-bootstrap' ;\nimport Title from './Title';\nimport ProjectsContainer from './ProjectsContainer';\nimport configs from './ProjectConfig';\n\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\n\nexport class App extends Component {\n  constructor(props) {\n    super(props)\n  \n    this.state = {\n      showTechnologies : false,\n      isFadeInNext : false\n    }\n\n    var timerForFade = null;\n    this.technologiesClick = this.technologiesClick.bind(this);\n  }\n\n  oldPortfolioClick(){\n    window.location.href=\"https://kanoeyesr.wixsite.com/portofolio\"\n  }\n\n  technologiesClick(){\n\n    if(this.state.showTechnologies === true){\n      var thisReference = this;\n      this.setState({\n        isFadeInNext : false\n      });\n\n      setTimeout( \n        function(){\n          thisReference.setState({\n            showTechnologies : false\n          });\n        }\n      ,1000);\n    }else{\n      this.setState({\n        isFadeInNext : true, \n        showTechnologies: true\n      });\n    }\n  }\n\n  renderTechnologies(){\n    if(this.state.showTechnologies){\n      return(\n        <Modal.Dialog className={(this.state.isFadeInNext ? \"fade-in\" : \"fade-out\") + \" tech-z-order\"}>\n          <Modal.Header onClick={()=>this.technologiesClick()} closeButton>\n            <Modal.Title>Technologies</Modal.Title>\n          </Modal.Header>\n  \n          <Modal.Body>\n            <p><b>React</b>\n              <br></br>\n              -react-bootstrap\n              <br></br>\n              <b>Personal Machine</b>\n              <br></br>\n              -Docker\n              <br></br>\n              -Nginx\n            </p>\n          </Modal.Body>\n  \n          <Modal.Footer>\n            <Button onClick={()=>this.technologiesClick()} variant=\"secondary\">Close</Button>\n          </Modal.Footer>\n        </Modal.Dialog>\n      )\n    }else{\n      return(\n        <div></div>\n      )\n    }\n  }\n  \n  render() {\n    return (\n      <div>\n        <Title defaultMachine={configs.defaultMachine} machineLinks={configs.machineLinks}></Title>\n        <ProjectsContainer configs = {configs}></ProjectsContainer>\n        \n            <div className=\"footer-buttons-holder\"> \n                    <Button onClick={()=>this.oldPortfolioClick()} className=\"app-old-portfolio\"><div>Old Portfolio</div></Button>\n                    <Button onClick={()=>this.technologiesClick()} className=\"app-technologies\"><div>Technologies</div></Button>\n            </div>\n       \n        {\n          this.renderTechnologies()\n        }\n      </div>\n    )\n  }\n}\n\nexport default App\n\n\n\n\n\n\n\n\n \n\n\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n//removed strict because of the bug caused by react-bootstrap\n//https://stackoverflow.com/questions/60802216/warning-finddomnode-is-deprecated-in-strictmode-react-redux-notify\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}